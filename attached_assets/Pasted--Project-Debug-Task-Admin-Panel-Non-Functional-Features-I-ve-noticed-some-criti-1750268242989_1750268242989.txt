-

> **🛠️ Project Debug Task: Admin Panel — Non-Functional Features**
>
> I've noticed some **critical parts of the Admin Panel are not working as intended**. Please read carefully and fix the following issues:
>
> ---
>
> ### 🔶 1. Promo Code Management (Located in: `PromoCodeTab.tsx`)
>
> **Problems:**
>
> * Creating a new promo code shows an error and doesn’t save.
> * Updating an existing promo code also fails.
>
> **What to check:**
>
> * The **form submission handler** and whether it sends the correct payload.
> * The **API route (backend)** receiving the request. Ensure it exists and processes both create and update correctly.
> * The **database layer** — check for issues with the promo code schema, required fields, or constraints.
> * Make sure proper **response messages** are returned so the UI can display feedback.
>
> ---
>
> ### 🔶 2. System Settings Tab — Tax Rate & Service Fee (Located in: `SystemSettingsTab.tsx`)
>
> **Problems:**
>
> * Trying to update **Tax Rate** or **Service Fee** results in visible error messages.
> * No changes are reflected in the UI or database.
>
> **What to check:**
>
> * Ensure **input fields** are correctly bound to state and handlers.
> * Check the **API request body** — is it sending `number` or `string`, and does the backend expect the same?
> * Validate the **backend routes** for these settings — do they correctly write to the database?
> * Ensure the database table (probably `settings` or similar) allows updates and that the field types are correct.
> * If you’re using `zod` or other validation, make sure the expected types match.
>
> ---
>
> ### 🔁 General Debug Instructions:
>
> * Log request payloads, API hits, and DB responses **at each step**.
> * Add **error handling** and return descriptive error messages for frontend.
> * Double-check **React Query**, **TanStack**, or any cache layer — make sure updates actually **invalidate and refetch** relevant data.
> * Ensure the **admin token or auth headers** are being passed in all admin update requests.
> * If using a `PUT` or `PATCH` request — confirm the method matches what the backend expects.
>
> ---
>
> ✅ **Goal:**
>
> * All CRUD operations for **Promo Codes**, **Tax Rate**, and **Service Fee** should work from the admin panel with clear success/failure messages.
> * Database should reflect changes immediately.
> * UI should show the latest values without manual refresh.
>
> ---
>
> Please handle this thoroughly — these are important admin features and should work smoothly before deployment.

---